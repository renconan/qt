#############################################################################
# Makefile for building: dizhou
# Generated by qmake (2.01a) (Qt 4.8.5) on: ?? 11? 11 11:48:50 2016
# Project:  dizhou.pro
# Template: app
# Command: /home/yingchuang/qt/bin/qmake -o Makefile dizhou.pro
#############################################################################

####### Compiler, tools and options

CC            = arm-none-linux-gnueabi-gcc -lts
CXX           = arm-none-linux-gnueabi-g++ -lts
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/home/yingchuang/qt/mkspecs/qws/linux-arm-gnueabi-g++ -I. -I/home/yingchuang/qt/include/QtCore -I/home/yingchuang/qt/include/QtNetwork -I/home/yingchuang/qt/include/QtGui -I/home/yingchuang/qt/include -I. -IHelp -I. -I. -I/home/yingchuang/qt/include
LINK          = arm-none-linux-gnueabi-g++ -lts
LFLAGS        = -Wl,-O1 -Wl,-rpath,/home/hl/qt/lib
LIBS          = $(SUBLIBS)  -L/home/yingchuang/qt/lib -lQtGui -L/home/hl/em9280/rootfs-qt4.8/lib -L/home/hl/qt/lib -lQtNetwork -lQtCore -lpthread 
AR            = arm-none-linux-gnueabi-ar cqs
RANLIB        = 
QMAKE         = /home/yingchuang/qt/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = arm-none-linux-gnueabi-strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = Curseq.cpp \
		KEY.cpp \
		keypads.cpp \
		main.cpp \
		Testcom2.cpp \
		thread1.cpp \
		widget.cpp \
		Help/helpdialog.cpp moc_keypads.cpp \
		moc_thread1.cpp \
		moc_widget.cpp \
		moc_helpdialog.cpp \
		qrc_myresource.cpp
OBJECTS       = Curseq.o \
		KEY.o \
		keypads.o \
		main.o \
		Testcom2.o \
		thread1.o \
		widget.o \
		helpdialog.o \
		moc_keypads.o \
		moc_thread1.o \
		moc_widget.o \
		moc_helpdialog.o \
		qrc_myresource.o
DIST          = /home/yingchuang/qt/mkspecs/common/unix.conf \
		/home/yingchuang/qt/mkspecs/common/linux.conf \
		/home/yingchuang/qt/mkspecs/common/gcc-base.conf \
		/home/yingchuang/qt/mkspecs/common/gcc-base-unix.conf \
		/home/yingchuang/qt/mkspecs/common/g++-base.conf \
		/home/yingchuang/qt/mkspecs/common/g++-unix.conf \
		/home/yingchuang/qt/mkspecs/common/qws.conf \
		/home/yingchuang/qt/mkspecs/qconfig.pri \
		/home/yingchuang/qt/mkspecs/features/qt_functions.prf \
		/home/yingchuang/qt/mkspecs/features/qt_config.prf \
		/home/yingchuang/qt/mkspecs/features/exclusive_builds.prf \
		/home/yingchuang/qt/mkspecs/features/default_pre.prf \
		/home/yingchuang/qt/mkspecs/features/release.prf \
		/home/yingchuang/qt/mkspecs/features/default_post.prf \
		/home/yingchuang/qt/mkspecs/features/shared.prf \
		/home/yingchuang/qt/mkspecs/features/warn_on.prf \
		/home/yingchuang/qt/mkspecs/features/qt.prf \
		/home/yingchuang/qt/mkspecs/features/unix/thread.prf \
		/home/yingchuang/qt/mkspecs/features/moc.prf \
		/home/yingchuang/qt/mkspecs/features/resources.prf \
		/home/yingchuang/qt/mkspecs/features/uic.prf \
		/home/yingchuang/qt/mkspecs/features/yacc.prf \
		/home/yingchuang/qt/mkspecs/features/lex.prf \
		/home/yingchuang/qt/mkspecs/features/include_source_dir.prf \
		dizhou.pro
QMAKE_TARGET  = dizhou
DESTDIR       = 
TARGET        = dizhou

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_keypads.h ui_widget.h ui_helpdialog.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: dizhou.pro  /home/yingchuang/qt/mkspecs/qws/linux-arm-gnueabi-g++/qmake.conf /home/yingchuang/qt/mkspecs/common/unix.conf \
		/home/yingchuang/qt/mkspecs/common/linux.conf \
		/home/yingchuang/qt/mkspecs/common/gcc-base.conf \
		/home/yingchuang/qt/mkspecs/common/gcc-base-unix.conf \
		/home/yingchuang/qt/mkspecs/common/g++-base.conf \
		/home/yingchuang/qt/mkspecs/common/g++-unix.conf \
		/home/yingchuang/qt/mkspecs/common/qws.conf \
		/home/yingchuang/qt/mkspecs/qconfig.pri \
		/home/yingchuang/qt/mkspecs/features/qt_functions.prf \
		/home/yingchuang/qt/mkspecs/features/qt_config.prf \
		/home/yingchuang/qt/mkspecs/features/exclusive_builds.prf \
		/home/yingchuang/qt/mkspecs/features/default_pre.prf \
		/home/yingchuang/qt/mkspecs/features/release.prf \
		/home/yingchuang/qt/mkspecs/features/default_post.prf \
		/home/yingchuang/qt/mkspecs/features/shared.prf \
		/home/yingchuang/qt/mkspecs/features/warn_on.prf \
		/home/yingchuang/qt/mkspecs/features/qt.prf \
		/home/yingchuang/qt/mkspecs/features/unix/thread.prf \
		/home/yingchuang/qt/mkspecs/features/moc.prf \
		/home/yingchuang/qt/mkspecs/features/resources.prf \
		/home/yingchuang/qt/mkspecs/features/uic.prf \
		/home/yingchuang/qt/mkspecs/features/yacc.prf \
		/home/yingchuang/qt/mkspecs/features/lex.prf \
		/home/yingchuang/qt/mkspecs/features/include_source_dir.prf \
		/home/yingchuang/qt/lib/libQtGui.prl \
		/home/yingchuang/qt/lib/libQtNetwork.prl \
		/home/yingchuang/qt/lib/libQtCore.prl
	$(QMAKE) -o Makefile dizhou.pro
/home/yingchuang/qt/mkspecs/common/unix.conf:
/home/yingchuang/qt/mkspecs/common/linux.conf:
/home/yingchuang/qt/mkspecs/common/gcc-base.conf:
/home/yingchuang/qt/mkspecs/common/gcc-base-unix.conf:
/home/yingchuang/qt/mkspecs/common/g++-base.conf:
/home/yingchuang/qt/mkspecs/common/g++-unix.conf:
/home/yingchuang/qt/mkspecs/common/qws.conf:
/home/yingchuang/qt/mkspecs/qconfig.pri:
/home/yingchuang/qt/mkspecs/features/qt_functions.prf:
/home/yingchuang/qt/mkspecs/features/qt_config.prf:
/home/yingchuang/qt/mkspecs/features/exclusive_builds.prf:
/home/yingchuang/qt/mkspecs/features/default_pre.prf:
/home/yingchuang/qt/mkspecs/features/release.prf:
/home/yingchuang/qt/mkspecs/features/default_post.prf:
/home/yingchuang/qt/mkspecs/features/shared.prf:
/home/yingchuang/qt/mkspecs/features/warn_on.prf:
/home/yingchuang/qt/mkspecs/features/qt.prf:
/home/yingchuang/qt/mkspecs/features/unix/thread.prf:
/home/yingchuang/qt/mkspecs/features/moc.prf:
/home/yingchuang/qt/mkspecs/features/resources.prf:
/home/yingchuang/qt/mkspecs/features/uic.prf:
/home/yingchuang/qt/mkspecs/features/yacc.prf:
/home/yingchuang/qt/mkspecs/features/lex.prf:
/home/yingchuang/qt/mkspecs/features/include_source_dir.prf:
/home/yingchuang/qt/lib/libQtGui.prl:
/home/yingchuang/qt/lib/libQtNetwork.prl:
/home/yingchuang/qt/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile dizhou.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/dizhou1.0.0 || $(MKDIR) .tmp/dizhou1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/dizhou1.0.0/ && $(COPY_FILE) --parents Config.h Curseq.h Defpam.h em335x_drivers.h KEY.h keypads.h Testcom2.h thread1.h widget.h Help/helpdialog.h .tmp/dizhou1.0.0/ && $(COPY_FILE) --parents myresource.qrc .tmp/dizhou1.0.0/ && $(COPY_FILE) --parents Curseq.cpp KEY.cpp keypads.cpp main.cpp Testcom2.cpp thread1.cpp widget.cpp Help/helpdialog.cpp .tmp/dizhou1.0.0/ && $(COPY_FILE) --parents keypads.ui widget.ui Help/helpdialog.ui .tmp/dizhou1.0.0/ && $(COPY_FILE) --parents trans/en.ts trans/zh.ts .tmp/dizhou1.0.0/ && (cd `dirname .tmp/dizhou1.0.0` && $(TAR) dizhou1.0.0.tar dizhou1.0.0 && $(COMPRESS) dizhou1.0.0.tar) && $(MOVE) `dirname .tmp/dizhou1.0.0`/dizhou1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/dizhou1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_keypads.cpp moc_thread1.cpp moc_widget.cpp moc_helpdialog.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_keypads.cpp moc_thread1.cpp moc_widget.cpp moc_helpdialog.cpp
moc_keypads.cpp: keypads.h
	/home/yingchuang/qt/bin/moc $(DEFINES) $(INCPATH) keypads.h -o moc_keypads.cpp

moc_thread1.cpp: Defpam.h \
		KEY.h \
		Config.h \
		Testcom2.h \
		Curseq.h \
		thread1.h
	/home/yingchuang/qt/bin/moc $(DEFINES) $(INCPATH) thread1.h -o moc_thread1.cpp

moc_widget.cpp: thread1.h \
		Defpam.h \
		KEY.h \
		Config.h \
		Testcom2.h \
		Curseq.h \
		keypads.h \
		Help/helpdialog.h \
		widget.h
	/home/yingchuang/qt/bin/moc $(DEFINES) $(INCPATH) widget.h -o moc_widget.cpp

moc_helpdialog.cpp: Help/helpdialog.h
	/home/yingchuang/qt/bin/moc $(DEFINES) $(INCPATH) Help/helpdialog.h -o moc_helpdialog.cpp

compiler_rcc_make_all: qrc_myresource.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_myresource.cpp
qrc_myresource.cpp: myresource.qrc \
		dagou.png \
		my.qss \
		trans/zh.qm \
		trans/en.qm \
		picture/cha.png \
		picture/enter.png \
		picture/0.png \
		picture/1.png \
		picture/fu.png \
		picture/2.png \
		picture/3.png \
		picture/4.png \
		picture/12.png \
		picture/5.png \
		picture/6.png \
		picture/7.png \
		picture/8.png \
		picture/9.png \
		picture/hong.png \
		picture/del.png \
		picture/hei.png
	/home/yingchuang/qt/bin/rcc -name myresource myresource.qrc -o qrc_myresource.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_keypads.h ui_widget.h ui_helpdialog.h
compiler_uic_clean:
	-$(DEL_FILE) ui_keypads.h ui_widget.h ui_helpdialog.h
ui_keypads.h: keypads.ui
	/home/yingchuang/qt/bin/uic keypads.ui -o ui_keypads.h

ui_widget.h: widget.ui
	/home/yingchuang/qt/bin/uic widget.ui -o ui_widget.h

ui_helpdialog.h: Help/helpdialog.ui
	/home/yingchuang/qt/bin/uic Help/helpdialog.ui -o ui_helpdialog.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 

####### Compile

Curseq.o: Curseq.cpp Config.h \
		Defpam.h \
		KEY.h \
		Testcom2.h \
		Curseq.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Curseq.o Curseq.cpp

KEY.o: KEY.cpp KEY.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o KEY.o KEY.cpp

keypads.o: keypads.cpp keypads.h \
		ui_keypads.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o keypads.o keypads.cpp

main.o: main.cpp widget.h \
		thread1.h \
		Defpam.h \
		KEY.h \
		Config.h \
		Testcom2.h \
		Curseq.h \
		keypads.h \
		Help/helpdialog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

Testcom2.o: Testcom2.cpp Config.h \
		Defpam.h \
		KEY.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Testcom2.o Testcom2.cpp

thread1.o: thread1.cpp KEY.h \
		Config.h \
		Testcom2.h \
		thread1.h \
		Defpam.h \
		Curseq.h \
		em335x_drivers.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o thread1.o thread1.cpp

widget.o: widget.cpp widget.h \
		thread1.h \
		Defpam.h \
		KEY.h \
		Config.h \
		Testcom2.h \
		Curseq.h \
		keypads.h \
		Help/helpdialog.h \
		ui_widget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o widget.o widget.cpp

helpdialog.o: Help/helpdialog.cpp Help/helpdialog.h \
		ui_helpdialog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o helpdialog.o Help/helpdialog.cpp

moc_keypads.o: moc_keypads.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_keypads.o moc_keypads.cpp

moc_thread1.o: moc_thread1.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_thread1.o moc_thread1.cpp

moc_widget.o: moc_widget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_widget.o moc_widget.cpp

moc_helpdialog.o: moc_helpdialog.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_helpdialog.o moc_helpdialog.cpp

qrc_myresource.o: qrc_myresource.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_myresource.o qrc_myresource.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

