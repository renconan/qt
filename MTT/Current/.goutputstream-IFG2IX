#include<conio.h>
#include<string.h>
#include<stdio.h>
#include<stdlib.h>
#include<math.h>
#include<ctype.h>
#include "Testcom2.h"


extern TEMPRORARYDATA *temprorarydata;

extern unsigned char result[70],receive_data[70];
extern double out_time,change_timedata;

extern int   low,row,seq_count;

extern int   I1DC,I2DC,I3DC;

extern int   TestItem1,TestItem3,TestItem2,OutputMode;

extern float StartCurrent,EndCurrent,ActStep,ReturnStep,StepTime;
extern float LogicResolution,SystemFrec;
extern float TripValue,TripValue1,ReturnValue,ReturnValue1,TripTime;

extern char   V1Output,V2Output,V3Output,I1Output,I2Output,I3Output;




double gettime(double x,double y,double z)  //compute logic act time
  {
    double time;
    x=result[7];
    y=result[8];
    z=result[9];
    time=(double)(((x*65536+y*256+z)*50-50)/1000000);
    return time;
  }

void output_signal_end(int fd)
  {
    int i,j;
    unsigned char step;
    artExec(fd,"seq:brk",result,0);
    artExec(fd,"inp:buf:clr",result,0);
    artExec(fd,"seq:clr",result,0);
    artExec(fd,"seq:begin",result,0);
    artExec(fd,"inp:dig(1):thres(0)",result,0);
    artExec(fd,"out:ana:v(1:1):off",result,0);
    artExec(fd,"out:ana:v(1:2):off",result,0);
    artExec(fd,"out:ana:v(1:3):off",result,0);
    artExec(fd,"out:ana:i(2:1):off",result,0);
    artExec(fd,"out:ana:i(2:2):off",result,0);
    artExec(fd,"out:ana:i(2:3):off",result,0);
    artExec(fd,"inp:buf:sam(bin,1)",result,0);
    out_time=-1;
    artExec(fd,"seq:wait(1,1)",result,0);
    artExec(fd,"seq:end",result,0);
    artExec(fd,"seq:exec",result,0);
    artExec(fd,"out:dig:off(0x08)",result,0);
  }

void OutputSequencer1(int fd)
  {
    float StartCurIA=0;
    float StartCurIB=0;
    float StartCurIC=0;
    float StepIA=0;
    float StepIB=0;
    float StepIC=0;
    switch(OutputMode)
     {
     case 1:  //IA
       StartCurIA=StartCurrent;
       StepIA=ActStep;
       break;
     case 2:  //IB
       StartCurIB=StartCurrent;
       StepIB=ActStep;
       break;
     case 3:  //IC
       StartCurIC=StartCurrent;
       StepIC=ActStep;
       break;
     case 4:  //IAIBIC
       StartCurIA=StartCurrent/3;
       StepIA=ActStep/3;
       StartCurIB=StartCurrent/3;
       StepIB=ActStep/3;
       StartCurIC=StartCurrent/3;
       StepIC=ActStep/3;
       break;
     }

    change_timedata=StepTime;
    artExec(fd,"inp:dig(1):thres(1)",result,0);//打开放大器
    artExec(fd,"inp:dig:interval(0)",result,0);//送开关量分辨率
    artExec(fd,"seq:brk",result,0);
    artExec(fd,"inp:buf:clr",result,0);
    artExec(fd,"seq:clr",result,0);
    artExec(fd,"seq:begin",result,0);

    artExec(fd,"inp:buf:sam(bin,1)",result,0);
    out_time=-1;
    artExec(fd,"seq:wait(0,1)",result,0);//第一步

    channel_input(0,StartCurIA,0,SystemFrec,I1DC,1,StepIA,0,0);
    artExec(fd,"others:ana:i(1:1):rel_phase(0)",result,0);
    artExec(fd,"others:steptime(1)",result,0);
    artExec(fd,"out:ana:i(1:1):on",result,0);
    channel_input(0,StartCurIB,0,SystemFrec,I2DC,2,StepIB,0,0);
    artExec(fd,"others:ana:i(1:2):rel_phase(0)",result,0);
    artExec(fd,"others:steptime(1)",result,0);
    artExec(fd,"out:ana:i(1:2):on",result,0);
    channel_input(0,StartCurIC,0,SystemFrec,I3DC,3,StepIC,0,0);
    artExec(fd,"others:ana:i(1:3):rel_phase(0)",result,0);
    artExec(fd,"others:steptime(1)",result,0);
    artExec(fd,"out:ana:i(1:3):on",result,0);
    artExec(fd,"inp:buf:sam(bin,2)",result,0);
    //artExec(fd,"seq:wait(orbin(1),2)",result,0);//第二步
    artExec(fd,"seq:wait(orbin(1),bin(1),bin(1),bin(1),2)",result,0);
    //2007-8-3 13:44,改为或的关系

    artExec(fd,"inp:buf:sam(bin,3)",result,0);
    out_time=-1;
    artExec(fd,"seq:wait(0,2)",result,0);

    artExec(fd,"inp:buf:sam(bin,4)",result,0);
    out_time=-1;
    artExec(fd,"seq:wait(0,1)",result,0);
    artExec(fd,"inp:buf:sam(bin,5)",result,0);
    out_time=-1;
    artExec(fd,"seq:wait(0,1)",result,0);

    artExec(fd,"seq:end",result,0);
    artExec(fd,"seq:exec",result,0);
  }

void OutputSequencer2(int fd)
  {
    float  change_stepdata;
    float StartCurIA=0;
    float StartCurIB=0;
    float StartCurIC=0;
    float StartCurIA1=0;
    float StartCurIB1=0;
    float StartCurIC1=0;
    float StepIA=0;
    float StepIB=0;
    float StepIC=0;
    change_stepdata=0-ReturnStep;
    change_timedata=StepTime;
    switch(OutputMode)
     {
     case 1:  //IA
       StartCurIA=TripValue;
       StepIA=change_stepdata;
       StartCurIA1=TripValue1;
       break;
     case 2:  //IB
       StartCurIB=TripValue;
       StepIB=change_stepdata;
       StartCurIB1=TripValue1;
       break;
     case 3:  //IC
       StartCurIC=TripValue;
       StepIC=change_stepdata;
       StartCurIC1=TripValue1;
       break;
     case 4:  //IAIBIC
       StartCurIA=TripValue/3;
       StepIA=change_stepdata/3;
       StartCurIA1=TripValue1/3;
       StartCurIB=TripValue/3;
       StepIB=change_stepdata/3;
       StartCurIB1=TripValue1/3;
       StartCurIC=TripValue/3;
       StepIC=change_stepdata/3;
       StartCurIC1=TripValue1/3;
       break;
     }

    artExec(fd,"inp:dig(1):thres(1)",result,0);
    artExec(fd,"inp:dig:interval(0)",result,0);
    artExec(fd,"seq:brk",result,0);
    artExec(fd,"inp:buf:clr",result,0);
    artExec(fd,"seq:clr",result,0);
    artExec(fd,"seq:begin",result,0);

    channel_input(0,StartCurIA1,360,SystemFrec,I1DC,1,StepIA,0,0);
    artExec(fd,"others:ana:i(1:1):rel_phase(0)",result,0);
    artExec(fd,"others:steptime(1)",result,0);
    artExec(fd,"out:ana:i(1:1):on",result,0);
    channel_input(0,StartCurIB1,360,SystemFrec,I2DC,2,StepIB,0,0);
    artExec(fd,"others:ana:i(1:2):rel_phase(0)",result,0);
    artExec(fd,"others:steptime(1)",result,0);
    artExec(fd,"out:ana:i(1:2):on",result,0);
    channel_input(0,StartCurIC1,360,SystemFrec,I3DC,3,StepIC,0,0);
    artExec(fd,"others:ana:i(1:3):rel_phase(0)",result,0);
    artExec(fd,"others:steptime(1)",result,0);
    artExec(fd,"out:ana:i(1:3):on",result,0);

    artExec(fd,"inp:buf:sam(bin,1)",result,0);
    out_time=fabs(floor((TripValue1-TripValue)/ReturnStep))*StepTime;
    artExec(fd,"seq:wait(0,1)",result,0);

    channel_input(0,StartCurIA,360,SystemFrec,I1DC,1,StepIA,0,0);
    artExec(fd,"others:ana:i(1:1):rel_phase(0)",result,0);
    artExec(fd,"others:steptime(1)",result,0);
    artExec(fd,"out:ana:i(1:1):on",result,0);
    channel_input(0,StartCurIB,360,SystemFrec,I2DC,2,StepIB,0,0);
    artExec(fd,"others:ana:i(1:2):rel_phase(0)",result,0);
    artExec(fd,"others:steptime(1)",result,0);
    artExec(fd,"out:ana:i(1:2):on",result,0);
    channel_input(0,StartCurIC,360,SystemFrec,I3DC,3,StepIC,0,0);
    artExec(fd,"others:ana:i(1:3):rel_phase(0)",result,0);
    artExec(fd,"others:steptime(1)",result,0);
    artExec(fd,"out:ana:i(1:3):on",result,0);

    artExec(fd,"inp:buf:sam(bin,2)",result,0);
    //artExec(fd,"seq:wait(orbin(1),2)",result,0);
     artExec(fd,"seq:wait(orbin(1),bin(1),bin(1),bin(1),2)",result,0);
    //2007-8-3 13:44,改为或的关系

    artExec(fd,"inp:buf:sam(bin,3)",result,0);
    out_time=-1;
    artExec(fd,"seq:wait(0,2)",result,0);

    artExec(fd,"inp:buf:sam(bin,4)",result,0);
    out_time=-1;
    artExec(fd,"seq:wait(0,1)",result,0);
    artExec(fd,"inp:buf:sam(bin,5)",result,0);
    out_time=-1;
    artExec(fd,"seq:wait(0,1)",result,0);

    artExec(fd,"seq:end",result,0);
    artExec(fd,"seq:exec",result,0);
  }

void OutputSequencer3(int fd)
  {
    float StartCurIA=0;
    float StartCurIB=0;
    float StartCurIC=0;
    float StepIA=0;
    float StepIB=0;
    float StepIC=0;
    switch(OutputMode)
     {
     case 1:  //IA
       StartCurIA=TripValue1;
       StepIA=ActStep;
       break;
     case 2:  //IB
       StartCurIB=TripValue1;
       StepIB=ActStep;
       break;
     case 3:  //IC
       StartCurIC=TripValue1;
       StepIC=ActStep;
       break;
     case 4:  //IAIBIC
       StartCurIA=TripValue1/3;
       StepIA=ActStep/3;
       StartCurIB=TripValue1/3;
       StepIB=ActStep/3;
       StartCurIC=TripValue1/3;
       StepIC=ActStep/3;
       break;
     }

    artExec(fd,"inp:dig(1):thres(1)",result,0);
    artExec(fd,"inp:dig:interval(0)",result,0);
    artExec(fd,"seq:brk",result,0);
    artExec(fd,"inp:buf:clr",result,0);
    artExec(fd,"seq:clr",result,0);
    artExec(fd,"seq:begin",result,0);

    channel_input(0,0,0,SystemFrec,I1DC,1,0,0,0);
    artExec(fd,"out:ana:i(1:1):on",result,0);
    channel_input(0,0,0,SystemFrec,I2DC,2,0,0,0);
    artExec(fd,"out:ana:i(1:2):on",result,0);
    channel_input(0,0,0,SystemFrec,I3DC,3,0,0,0);
    artExec(fd,"out:ana:i(1:3):on",result,0);
    //测试动作时间时，先输出0
    artExec(fd,"inp:buf:sam(bin,1)",result,0);
    if(StepTime>=1)
      out_time=StepTime*2;
    else
      out_time=2;
    artExec(fd,"seq:wait(0,1)",result,0);

    channel_input(0,StartCurIA,360,SystemFrec,I1DC,1,0,0,0);
    artExec(fd,"others:ana:i(1:1):rel_phase(0)",result,0);
    artExec(fd,"out:ana:i(1:1):on",result,0);
    channel_input(0,StartCurIB,360,SystemFrec,I2DC,2,0,0,0);
    artExec(fd,"others:ana:i(1:2):rel_phase(0)",result,0);
    artExec(fd,"out:ana:i(1:2):on",result,0);
    channel_input(0,StartCurIC,360,SystemFrec,I3DC,3,0,0,0);
    artExec(fd,"others:ana:i(1:3):rel_phase(0)",result,0);
    artExec(fd,"out:ana:i(1:3):on",result,0);
    //从0跳变到可靠动作值
    artExec(fd,"inp:buf:sam(bin,2)",result,0);
    out_time=StepTime*2;
    //artExec(fd,"seq:wait(orbin(1),2,0,1)",result,0);
    artExec(fd,"seq:wait(orbin(1),bin(1),bin(1),bin(1),2,0,1)",result,0);
    //2007-8-3 13:44,改为或的关系


    artExec(fd,"inp:buf:sam(bin,3)",result,0);
    out_time=-1;
    artExec(fd,"seq:wait(0,2)",result,0);

    artExec(fd,"inp:buf:sam(bin,4)",result,0);
    out_time=-1;
    artExec(fd,"seq:wait(0,1)",result,0);
    artExec(fd,"inp:buf:sam(bin,5)",result,0);
    out_time=-1;
    artExec(fd,"seq:wait(0,1)",result,0);

    artExec(fd,"seq:end",result,0);
    artExec(fd,"seq:exec",result,0);
  }

